{"version":3,"sources":["crawlers/main.js"],"names":[],"mappings":";;;;;;;;;;wDAYO;YACiB,0BAApB;YACQ,cAAR;YACY,kBAAZ;;6CAGO,eAAe,oDACf,eAAe;;;;;;yCADoB;;AAAnC;AAAe;0CACoB;;AAAnC;AAAe;;;AAEtB,4CAAI,kBAAJ,EAAwB,UAAxB,EAAoC,gBAApC;AACA,4CAAI,kBAAJ,EAAwB,UAAxB,EAAoC,gBAApC;;;+BAEM,QAAQ,GAAR,CAAY,CAAC,aAAD,EAAgB,aAAhB,CAAZ;;;AACN;;;;;;;;KAbG;;oBAAe;;;;;;;;;;;;;;;;;AATtB,SAAS,aAAT,GAAyB;AACrB,QAAI,eAAJ,CADqB;AAErB,QAAM,OAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAmB;AACxC,cAAM,OAAN,CADwC;KAAnB,CAAnB,CAFe;;AAMrB,WAAO,CAAC,IAAD,EAAO,GAAP,CAAP,CANqB;CAAzB","file":"crawlers/main.js","sourcesContent":["import CVB from './cvb/main'\r\nimport CVO from './cvo/main'\r\n\r\nfunction onDoneWrapper() {\r\n    let res;\r\n    const prom = new Promise((resolve, reject)=>{\r\n        res = resolve\r\n    });\r\n\r\n    return [prom, res]\r\n}\r\n\r\nexport async function crawl({\r\n    taskSuccessHandler: taskSuccessHandler,\r\n    onDone: onDone,\r\n    taskConfig: taskConfig\r\n    }) {\r\n\r\n    const [onDoneWrapCVB, resolveOnDoneCVB] = onDoneWrapper();\r\n    const [onDoneWrapCVO, resolveOnDoneCVO] = onDoneWrapper();\r\n\r\n    CVB(taskSuccessHandler, taskConfig, resolveOnDoneCVB);\r\n    CVO(taskSuccessHandler, taskConfig, resolveOnDoneCVO);\r\n\r\n    await Promise.all([onDoneWrapCVB, onDoneWrapCVO]);\r\n    onDone()\r\n}"],"sourceRoot":"/source/"}