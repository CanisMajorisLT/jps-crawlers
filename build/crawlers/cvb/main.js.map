{"version":3,"sources":["crawlers/cvb/main.js"],"names":[],"mappings":";;;;;;;wDAWA,iBAAwB,kBAAxB,EAA4C,MAA5C,EAAoD,MAApD;YAEQ,gBACE,mBACA,WAEA,QACA,wBAMA,OAGA;;;;;AAdF,yCAAiB,oCAAyB,KAAzB;AACf,4CAAoB,oCAAyB,KAAzB,EAAgC,kBAAhC;AACpB,oCAAY,yCAA8B,cAA9B;AAEZ,iCAAS,4CAAmB,SAAnB,EAA8B,eAAe,OAAf,EAAwB,iBAAtD;AACT,iDAAyB,gBAAO,KAAP,CAAa,MAAb,EAAqB,OAAO,OAAP,CAAe,OAAf,IAA0B,sBAA1B;;AACpD,4BAAG,WAAW,SAAX,EAAsB,uBAAuB,KAAvB,GAA+B,MAA/B,CAAzB;;AAGA,uCAAe,QAAf,CAAwB,sBAAxB;;;+BAEoB,iCAAsB,eAAe,OAAf,CAAuB,SAAvB,EAAkC,GAAlC,CAAtB;;;AAAd;;AACN,yCAAO,IAAP,kBAA2B,KAA3B;;AAEM,gCAAQ,kCAAuB,KAAvB,EAA8B,CAA9B,EAAiC,OAAO,IAAP;;;AAE/C,+CAAuB,IAAvB,CAA4B,KAA5B;;;;;;;;KAlBJ;;oBAAe;;;;;;;;;;;;;;;;;;;;;;;AAJf,IAAM,iBAAiB,sCAAjB;AACN,IAAM,yBAAyB,CAAzB;;kBAwBS","file":"crawlers/cvb/main.js","sourcesContent":["import { default as async_ } from 'async'\r\nimport { extractTotalPageCount, extractFrontInfo } from './parser'\r\nimport { queueWorkerFactory } from '../common/queueWorkerFactory'\r\nimport { generateFrontInfoTasks, getNumberOfFrontPages,\r\n         parseFrontPageArticlesFactory, handleTaskSuccessFactory, handleTaskFailureFactory } from '../common/core'\r\nimport logger from '../../../logging/logger'\r\n\r\nconst FRONT_PAGE_URI = 'http://www.cvbankas.lt/?page=${page}';\r\nconst DEFAULT_WORKERS_NUMBER = 1;\r\n\r\n\r\nasync function parseCVB(taskSuccessHandler, config, onDone) {\r\n\r\n    let handleTaskFail = handleTaskFailureFactory('CVB');\r\n    const handleTaskSuccess = handleTaskSuccessFactory('CVB', taskSuccessHandler);\r\n    const adsParser = parseFrontPageArticlesFactory(FRONT_PAGE_URI, extractFrontInfo);\r\n\r\n    const worker = queueWorkerFactory(adsParser, handleTaskFail.handler, handleTaskSuccess);\r\n    const FrontInfoFetchingQueue = async_.queue(worker, config.general.workers || DEFAULT_WORKERS_NUMBER);\r\n    if(onDone !== undefined) FrontInfoFetchingQueue.drain = onDone;\r\n\r\n\r\n    handleTaskFail.setQueue(FrontInfoFetchingQueue); // so task can be requeued on fail\r\n\r\n    const pages = await getNumberOfFrontPages(FRONT_PAGE_URI.replace('${page}', '1'), extractTotalPageCount);\r\n    logger.info(`Page count: ${pages}`);\r\n\r\n    const tasks = generateFrontInfoTasks(pages, 1, config.task);\r\n\r\n    FrontInfoFetchingQueue.push(tasks)\r\n}\r\n\r\nexport default parseCVB\r\n\r\n\r\n"],"sourceRoot":"/source/"}