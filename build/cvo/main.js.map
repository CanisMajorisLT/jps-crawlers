{"version":3,"sources":["../../src/crawlers/cvo/main.js"],"names":[],"mappings":";;;;;;;wDAUA;YAEQ,gBACE,mBACA,WAEA,QACA,wBAIA,OAGA;;;;;AAZF,yCAAiB,oCAAyB,KAAzB;AACf,4CAAoB,mCAAwB,KAAxB;AACpB,oCAAY,yCAA8B,cAA9B;AAEZ,iCAAS,4CAAmB,SAAnB,EAA8B,eAAe,OAAf,EAAwB,iBAAtD;AACT,iDAAyB,gBAAO,KAAP,CAAa,MAAb,EAAqB,sBAArB;;;AAE/B,uCAAe,QAAf,CAAwB,sBAAxB;;;+BAEoB,iCAAsB,eAAe,OAAf,CAAuB,SAAvB,EAAkC,KAAlC,CAAtB;;;AAAd;;AACN,gCAAQ,GAAR,kBAA2B,KAA3B;;AAEM,gCAAQ,kCAAuB,KAAvB,EAA8B,CAA9B;;;AAEd,+CAAuB,IAAvB,CAA4B,KAA5B;;;;;;;;KAhBJ;;oBAAe;;;;;;;;;;;;;;;;;;;AAJf,IAAM,iBAAiB,0DAAjB;AACN,IAAM,yBAAyB,CAAzB;;kBAsBS","file":"main.js","sourcesContent":["import { default as async_ } from 'async'\r\nimport { extractTotalPageCount, extractFrontInfo } from './parser'\r\nimport { queueWorkerFactory } from '../common/queueWorkerFactory'\r\nimport { generateFrontInfoTasks, getNumberOfFrontPages,\r\n    parseFrontPageArticlesFactory, handleTaskSuccessFacory, handleTaskFailureFactory } from '../common/core'\r\n\r\nconst FRONT_PAGE_URI = 'http://www.cvonline.lt/darbo-skelbimai/visi?page=${page}';\r\nconst DEFAULT_WORKERS_NUMBER = 1;\r\n\r\n\r\nasync function parseCVO() {\r\n\r\n    let handleTaskFail = handleTaskFailureFactory('CVO');\r\n    const handleTaskSuccess = handleTaskSuccessFacory('CVO');\r\n    const adsParser = parseFrontPageArticlesFactory(FRONT_PAGE_URI, extractFrontInfo);\r\n\r\n    const worker = queueWorkerFactory(adsParser, handleTaskFail.handler, handleTaskSuccess);\r\n    const FrontInfoFetchingQueue = async_.queue(worker, DEFAULT_WORKERS_NUMBER);\r\n\r\n    handleTaskFail.setQueue(FrontInfoFetchingQueue); // so task can be requeued on fail\r\n\r\n    const pages = await getNumberOfFrontPages(FRONT_PAGE_URI.replace('${page}', '200'), extractTotalPageCount);\r\n    console.log(`Page count: ${pages}`);\r\n\r\n    const tasks = generateFrontInfoTasks(pages, 1);\r\n\r\n    FrontInfoFetchingQueue.push(tasks)\r\n}\r\n\r\nexport default parseCVO\r\n\r\n\r\n\r\n\r\n\r\n"]}