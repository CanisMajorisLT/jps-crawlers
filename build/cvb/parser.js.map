{"version":3,"sources":["../../src/crawlers/cvb/parser.js"],"names":[],"mappings":";;;;;;QAkEgB;;;;;;;;;;;;;;;;AAxDhB,SAAS,sBAAT,CAAgC,IAAhC,EAAsC;AAClC,QAAI,OAAO,kBAAE,IAAF,CAAO,IAAP,CAAP,CAD8B;;AAGlC,QAAM,aAAa,KAAK,iBAAL,EAAwB,QAAxB,GAAmC,IAAnC,GAA0C,IAA1C,EAAb,CAH4B;;AAKlC,WAAO,eAAe,EAAf,GAAoB,SAAS,UAAT,CAApB,GAA2C,UAA3C,CAL2B;CAAtC;;AAQO,IAAI,wDAAwB,+BAAc,sBAAd,EAAsC,sBAAtC,CAAxB;;AAIX,SAAS,wBAAT,CAAkC,OAAlC,EAA2C,KAA3C,EAAkD,UAAlD,EAA8D;AAC1D,QAAI,KAAK,kBAAE,IAAF,CAAO,OAAP,CAAL,CADsD;;AAG1D,aAAS,MAAT,CAAgB,EAAhB,EAAoB;AAChB,eAAO,GAAG,GAAH,EAAQ,IAAR,CAAa,MAAb,CAAP,CADgB;KAApB;;AAIA,aAAS,QAAT,CAAkB,EAAlB,EAAsB;AAClB,eAAO,GAAG,eAAH,EAAoB,IAApB,EAAP,CADkB;KAAtB;;AAIA,aAAS,KAAT,CAAe,EAAf,EAAmB;AACf,eAAO,SAAS,GAAG,wBAAH,EAA6B,IAA7B,CAAkC,OAAlC,CAAT,CAAP,CADe;KAAnB;;AAIA,aAAS,cAAT,CAAwB,EAAxB,EAA4B;AACxB,eAAO,GAAG,mBAAH,EAAwB,IAAxB,CAA6B,KAA7B,CAAP,CADwB;KAA5B;;AAIA,aAAS,uBAAT,CAAiC,EAAjC,EAAqC;AACjC,WAAG,uBAAH,EAA4B,MAA5B,GADiC;AAEjC,eAAO,GAAG,oBAAH,EAAyB,IAAzB,GAAgC,IAAhC,EAAP,CAFiC;KAArC;;AAKA,aAAS,OAAT,CAAiB,EAAjB,EAAqB;AACjB,eAAO,GAAG,uBAAH,EAA4B,IAA5B,EAAP,CADiB;KAArB;;AAIA,WAAO;AACH,aAAK,+BAAc,MAAd,EAAsB,8BAAtB,EAA0C,EAA1C,CAAL;AACA,eAAO,+BAAc,QAAd,EAAwB,8BAAxB,EAA4C,EAA5C,CAAP;AACA,cAAM,+BAAc,OAAd,EAAuB,8BAAvB,EAA2C,EAA3C,CAAN;AACA,iBAAS,+BAAc,cAAd,EAA8B,8BAA9B,EAAkD,EAAlD,CAAT;AACA,0BAAkB,+BAAc,uBAAd,EAAuC,8BAAvC,EAA2D,EAA3D,CAAlB;AACA,YAAI,+BAAc,KAAd,EAAqB,sBAArB,EAAiC,EAAjC,CAAJ;AACA,cAAO;AACH,qBAAS,KAAT;AACA,kCAFG;SAAP;;KAPJ,CA5B0D;CAA9D;;AA4CO,SAAS,gBAAT,CAA0B,IAA1B,EAAgC,IAAhC,EAAqC;AACxC,QAAI,OAAO,kBAAE,IAAF,CAAO,IAAP,CAAP,CADoC;;AAGxC,aAAS,WAAT,CAAqB,IAArB,EAA2B;AACvB,eAAO,KAAK,sBAAL,EAA6B,GAA7B,EAAP,CADuB;KAA3B;;AAIA,QAAM,WAAW,+BAAc,WAAd,EAA2B,6BAA3B,EAA8C,IAA9C,CAAX,CAPkC;;AASxC,WAAO,SAAS,GAAT,CAAa,UAAC,IAAD,EAAO,KAAP;eAAgB,yBAAyB,IAAzB,EAA+B,KAA/B,EAAsC,KAAK,UAAL;KAAtD,CAApB,CATwC;CAArC","file":"parser.js","sourcesContent":["import $ from 'cheerio'\r\nimport { validateParse, isNotEmptyString, isNumber, isNotEmptyArray } from '../common/validators'\r\n\r\n\r\n/**\r\n * Finds number of pages that display ads\r\n * @param {String} html\r\n * @returns {Number | String}\r\n * @private\r\n */\r\nfunction extractTotalPageCount_(html) {\r\n    var page = $.load(html);\r\n\r\n    const pagesCount = page('.pages_ul_inner').children().last().text();\r\n\r\n    return pagesCount !== '' ? parseInt(pagesCount) : pagesCount\r\n}\r\n\r\nexport let extractTotalPageCount = validateParse(extractTotalPageCount_, [isNumber]);\r\n\r\n\r\n\r\nfunction extractFrontInfoForOneAd(element, index, pageNumber) {\r\n    var ad = $.load(element);\r\n\r\n    function getUri(ad) {\r\n        return ad('a').attr('href')\r\n    }\r\n\r\n    function getTitle(ad) {\r\n        return ad('.list_cell h3').text()\r\n    }\r\n\r\n    function getId(ad) {\r\n        return parseInt(ad('form input[name=ad_id]').attr('value'))\r\n    }\r\n\r\n    function getCompanyName(ad) {\r\n        return ad('div.list_cell img').attr('alt')\r\n    }\r\n\r\n    function getSecondaryCompanyName(ad) {\r\n        ad('span.jobadlist_salary').remove();\r\n        return ad('.heading_secondary').text().trim()\r\n    }\r\n\r\n    function getCity(ad) {\r\n        return ad('span[class=list_city]').text()\r\n    }\r\n\r\n    return {\r\n        uri: validateParse(getUri, [isNotEmptyString])(ad),\r\n        title: validateParse(getTitle, [isNotEmptyString])(ad),\r\n        city: validateParse(getCity, [isNotEmptyString])(ad),\r\n        company: validateParse(getCompanyName, [isNotEmptyString])(ad),\r\n        companySecondary: validateParse(getSecondaryCompanyName, [isNotEmptyString])(ad),\r\n        id: validateParse(getId, [isNumber])(ad),\r\n        meta : {\r\n            adIndex: index,\r\n            pageNumber\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function extractFrontInfo(html, task){\r\n    var page = $.load(html);\r\n\r\n    function getArticles(page) {\r\n        return page('#job_ad_list article').get()\r\n    }\r\n\r\n    const articles = validateParse(getArticles, [isNotEmptyArray])(page);\r\n\r\n    return articles.map((elem, index)=> extractFrontInfoForOneAd(elem, index, task.pageNumber))\r\n}\r\n\r\n\r\n\r\n"]}