{"version":3,"sources":["db/models/parsedAd.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAKA,IAAM,aAAa,UAAb;;AAEN,IAAM,iBAAiB,IAAI,mBAAS,MAAT,CAAgB;AACvC,UAAM,MAAN;AACA,YAAQ,MAAR;AACA,gBAAY;AACR,aAAK,MAAL;AACA,eAAO,MAAP;AACA,cAAM,MAAN;AACA,iBAAS,MAAT;AACA,0BAAkB,MAAlB;AACA,eAAO,MAAP;KANJ;AAQA,UAAM;AACF,mBAAW,IAAX;AACA,iBAAS,MAAT;AACA,oBAAY,MAAZ;KAHJ;CAXmB,CAAjB;;AAkBN,eAAe,OAAf,CAAuB,UAAvB,GAAoC,SAAS,UAAT,CAAoB,IAApB,EAA0B,MAA1B,EAAkC,IAAlC,EAAwC;;AAExE,QAAM,gBAAgB,KAAK,GAAL,CAAS,UAAC,EAAD,EAAO;AAClC,eAAO;AACH,kBAAM,GAAG,EAAH;AACN,oBAAQ,MAAR;AACA,wBAAY;AACR,qBAAK,GAAG,GAAH;AACL,uBAAO,GAAG,KAAH;AACP,sBAAM,GAAG,IAAH;AACN,yBAAS,GAAG,OAAH;AACT,kCAAkB,GAAG,gBAAH;AAClB,uBAAO,GAAG,KAAH;aANX;AAQA,kBAAM;AACF,2BAAW,IAAX;AACA,yBAAS,GAAG,IAAH,CAAQ,OAAR;AACT,4BAAY,GAAG,IAAH,CAAQ,UAAR;aAHhB;SAXJ,CADkC;KAAP,CAAzB,CAFkE;;AAsBxE,SAAK,MAAL,CAAY,aAAZ,EAA2B,UAAC,KAAD,EAAU;AACjC,yBAAO,KAAP,CAAa,gCAAb,EADiC;AAEjC,iBAAS,iBAAO,KAAP,CAAa,oCAAb,EAAmD,EAAC,YAAD,EAAnD,CAAT,CAFiC;KAAV,CAA3B,CAtBwE;CAAxC;;AA4BpC,eAAe,OAAf,CAAuB,UAAvB,GAAoC,UAAS,IAAT,EAAe,MAAf,EAAuB,IAAvB,EAA4B,EAA5B;;AAMpC,mBAAS,KAAT,CAAe,UAAf,EAA2B,cAA3B","file":"db/models/parsedAd.js","sourcesContent":["import mongoose from 'mongoose'\r\nimport { isArray } from 'lodash'\r\nimport logger from '../../../logging/logger'\r\n\r\n\r\nconst MODEL_NAME = 'ParsedAd';\r\n\r\nconst ParsedAdSchema = new mongoose.Schema({\r\n    adId: String,\r\n    source: String,\r\n    parsedData: {\r\n        uri: String,\r\n        title: String,\r\n        city: String,\r\n        company: String,\r\n        companySecondary: String,\r\n        views: Number\r\n    },\r\n    meta: {\r\n        parseDate: Date, // should be same value for all entries on single crawl\r\n        adIndex: Number,\r\n        pageNumber: Number\r\n    }\r\n});\r\n\r\nParsedAdSchema.statics.insertDocs = function insertDocs(data, source, date) {\r\n\r\n    const dataForInsert = data.map((ad)=> {\r\n        return {\r\n            adId: ad.id,\r\n            source: source,\r\n            parsedData: {\r\n                uri: ad.uri,\r\n                title: ad.title,\r\n                city: ad.city,\r\n                company: ad.company,\r\n                companySecondary: ad.companySecondary,\r\n                views: ad.views\r\n            },\r\n            meta: {\r\n                parseDate: date,\r\n                adIndex: ad.meta.adIndex,\r\n                pageNumber: ad.meta.pageNumber\r\n            }\r\n        }\r\n    });\r\n\r\n    this.create(dataForInsert, (error)=> {\r\n        logger.debug('successfully created parsedads');\r\n        error && logger.error('Error  while creating new ParsedAd', {error});\r\n    })\r\n};\r\n\r\nParsedAdSchema.statics.insertMany = function(data, source, date){\r\n\r\n};\r\n\r\n\r\n\r\nmongoose.model(MODEL_NAME, ParsedAdSchema);"],"sourceRoot":"/source/"}